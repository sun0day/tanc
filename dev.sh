#!/usr/bin/env bash

alias tcconfig="echo '\n-------> Configure cmake <-------\n' && mkdir build 2>/dev/null || true && cd build && cmake .. || true && cd .."
alias tcbuild="tcconfig && echo '\n-------> Build libs <-------\n' && cmake --build build"
alias tctest="export TEST_RUN=1 && tcbuild && echo '\n-------> Run tests <-------\n' && ./test.sh"
alias tcinstall="sudo cmake --install build"
alias tcexpand="gcc -E -DTANC_UT_ON=1 -I lib/macro -I lib/utest" 
alias tcclean="rm -rf build **/{CMakeFiles,cmake_install.cmake,CMakeCache.txt,Makefile,install_manifest}* 2>/dev/null || true && echo '\nTmp files cleaned!\n'"
alias tclint="clang-format -i **/*.c **/*.h"
alias tcout="TEST_RUN=1 cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1"

echo "\nTanc dev cmds preset!\n"
echo "tcconfig     \"configure cmake\""
echo "\ntcbuild      \"build libs\""
echo "\n             \"--target [lib], choose multiple libs to build\""
echo "\ntctest       \"run tests\""
echo "\ntcinstall    \"install libs\""
echo "\n             \"--component [lib], choose multiple libs to install\""
echo "\ntcexpand     \"expand code macro\""
echo "\ntcclean      \"clean tmp files\""
echo "\ntclint       \"lint source code\""
echo "\ntcout        \"generate compile_commands.json\""
